#include "cinder/app/AppNative.h"
#include "cinder/gl/gl.h"
#include "cinder/gl/TextureFont.h"
#include "CirclesSeparation.h"

using namespace ci;
using namespace ci::app;
using namespace std;

/*
 double XX[] = {0.3335127999, 0.8078256840, 0.0762628149, 0.2720915674, 0.6128777757, 0.3353841434, 0.4853916493, 0.8909021322, 0.9523580982, 0.2445442727, 0.8770602824, 0.9921680783, 0.6011231971, 0.0607051585, 0.7230326172, 0.1688528785, 0.3284770214, 0.8150966076, 0.9059469261, 0.8824331246, 0.4756628980, 0.5480837978, 0.0640069700, 0.7517718750, 0.2164545244, 0.4771324947, 0.5140290603, 0.5953751059, 0.4032380490, 0.6942319388, 0.7303846715, 0.7817798254, 0.6352093452, 0.4594626086, 0.8546307170, 0.0100890955, 0.8767857551, 0.0583112233, 0.7645218636, 0.7398508921, 0.5291451537, 0.1334773467, 0.2717450197, 0.8582773563, 0.1741939402, 0.0962164362, 0.0832726662, 0.7750935593, 0.9853518467, 0.6442535316, 0.6857853506, 0.5491852781, 0.1596042598, 0.9380790824, 0.9612611598, 0.3801484363, 0.2001837662, 0.2574316868, 0.5444222198, 0.4069743942, 0.0844398364, 0.1079684931, 0.1416762743, 0.2856204665, 0.5341061722, 0.7831749615, 0.4413172670, 0.5799547311, 0.7748234701, 0.1378282038, 0.5760106113, 0.7927417867, 0.5953841531, 0.1783640586, 0.9787180008, 0.8841157064, 0.2711409214, 0.9932742243, 0.1691864427, 0.9981942135, 0.8012435377, 0.5396718822, 0.2284883235, 0.4562646755, 0.0376832394, 0.2989508213, 0.9910252464, 0.4131184585, 0.7052910753, 0.4223242898, 0.0258574486, 0.9164319104, 0.0533776138, 0.2549254604, 0.1110321352, 0.5805739364, 0.1071549183, 0.8018524222, 0.3000540965, 0.6597717297, 0.2016233439, 0.4694276556, 0.7063188370, 0.5109130470, 0.0825099194, 0.7909446172, 0.1983323661, 0.2546878635, 0.5432245327, 0.9392110791, 0.1721778359, 0.7199866853, 0.6794790406, 0.3110432328, 0.6331567141, 0.0091008150, 0.9720883935, 0.3817254076, 0.1638196314, 0.5254553655, 0.9040358127, 0.9848790515, 0.5297886512, 0.2980473867, 0.5392058236, 0.2995054740, 0.8451847847, 0.7088953298, 0.1498471418, 0.3658012620, 0.9171404553, 0.5726501638, 0.7278012069, 0.9793950506, 0.5553520486, 0.1474075870, 0.0217072708, 0.7920832310, 0.3061201881, 0.7607487771, 0.2377800429, 0.0451184171, 0.8277486258, 0.5502857596, 0.0480383977, 0.9380158768, 0.4497482813, 0.7539808540, 0.9338000638, 0.0332795323, 0.2618563460, 0.0981662447, 0.5077312596, 0.5915599590, 0.2559188666, 0.7663068348, 0.2031633979, 0.2983452066, 0.5468535825, 0.9045753329, 0.0842464938, 0.7576054733, 0.4572268377, 0.1664161425, 0.9188752090, 0.2678278155, 0.2304847127, 0.9928240691, 0.3543318486, 0.9656112141, 0.1517310831, 0.6434352780, 0.2109918111, 0.4440867225, 0.1744254888, 0.7202315455, 0.2621475551, 0.8862282296, 0.6047314765, 0.7743280630, 0.7982350094, 0.8765600897, 0.5864093464, 0.7908498881, 0.8273934070, 0.9218822144, 0.4525560927, 0.6263010686, 0.1154841532, 0.8124947181, 0.6690141302, 0.9468264422, 0.3613044926, 0.0837012451, 0.6295898645, 0.6722060719, 0.7674641693, 0.1022739333, 0.9146793464, 0.6475803414, 0.1303867860, 0.0624988602, 0.2822243353, 0.8632860154, 0.2320360271, 0.4010954932};
 double YY[] = {0.3758830309, 0.4730089122, 0.2465639824, 0.0920914140, 0.8672106367, 0.4568039096, 0.1291796894, 0.0636732337, 0.8607632734, 0.6738704473, 0.2590512049, 0.7606673367, 0.8789866573, 0.7873028213, 0.0892662026, 0.4293516032, 0.7964163894, 0.3638946877, 0.0691167077, 0.9342851624, 0.3966735510, 0.5179000018, 0.4491906337, 0.8811131006, 0.0901699641, 0.6272709614, 0.0940672161, 0.9282396871, 0.9281379276, 0.7690638234, 0.1839894702, 0.7075470111, 0.0850996572, 0.2369292133, 0.3555524706, 0.2547952575, 0.4481940422, 0.8294426257, 0.8972489995, 0.8276081357, 0.3517089616, 0.5297287746, 0.7862477299, 0.2396032078, 0.1043359854, 0.5024838096, 0.5816764012, 0.2896440342, 0.2065192388, 0.2502820631, 0.8122362160, 0.3541526438, 0.0013211330, 0.2650706642, 0.1459479323, 0.0967771900, 0.1889935364, 0.3638327473, 0.0484960501, 0.1834896389, 0.6127234878, 0.4077014350, 0.3730498024, 0.2770634439, 0.5687127576, 0.1071309889, 0.6303349961, 0.2122566220, 0.9167493133, 0.8269767367, 0.8381096860, 0.4856579528, 0.8133085457, 0.4358713732, 0.2305312292, 0.4083143346, 0.5680576724, 0.5892943337, 0.4288232305, 0.0682134348, 0.3616559735, 0.4528779533, 0.2602879355, 0.5781115518, 0.3035268438, 0.3251687911, 0.1519131539, 0.6069001648, 0.4710605970, 0.2822246800, 0.7700538429, 0.6880756954, 0.4017646683, 0.3802787618, 0.3790830964, 0.5300571048, 0.3752636347, 0.9019615885, 0.7406738412, 0.0560123406, 0.3389051880, 0.1571297554, 0.0148183152, 0.3489079820, 0.3554438148, 0.8291236329, 0.9690382888, 0.0525945019, 0.6224861071, 0.6158290737, 0.6948431850, 0.9596261898, 0.5464881547, 0.5940654994, 0.4424204140, 0.6774669199, 0.4980559971, 0.0738183816, 0.4805877871, 0.6916129721, 0.3634491242, 0.4699715428, 0.8875132653, 0.2778967983, 0.0822367291, 0.7840146324, 0.7412988971, 0.1407246529, 0.9081796369, 0.3200063191, 0.4972539705, 0.7077128151, 0.5051267494, 0.2700671451, 0.2201204833, 0.2239977913, 0.9549691814, 0.2691342453, 0.0433084265, 0.6407101479, 0.8164577687, 0.7998130686, 0.9128873144, 0.9692590043, 0.5121784768, 0.9403752022, 0.1397923203, 0.5508533073, 0.5086632060, 0.6661072454, 0.2798224160, 0.7144454918, 0.3375516826, 0.3832237782, 0.1637057659, 0.5714065728, 0.7267762315, 0.4845769012, 0.5539751109, 0.7364728134, 0.6398506079, 0.2310154358, 0.6727870005, 0.4127776542, 0.7319810820, 0.5241124147, 0.8492049667, 0.2953547312, 0.0214685089, 0.8720612088, 0.6208201801, 0.7607615131, 0.1978055619, 0.2355870113, 0.7493984362, 0.9491542744, 0.3599726759, 0.8191609718, 0.4083181772, 0.2567812410, 0.2816540479, 0.9556141945, 0.5808959977, 0.8988091312, 0.4432341479, 0.2081087365, 0.7913578715, 0.9392389700, 0.8212796369, 0.9890583599, 0.6413228676, 0.5221852650, 0.4412472068, 0.3160884609, 0.2576009753, 0.6124787827, 0.8060940252, 0.7403216942, 0.6890752270, 0.5676908360, 0.8620223414, 0.3550695795, 0.2870055521, 0.3921285618, 0.4752714218, 0.5980302376};
 double RR[] = {0.0893781327, 0.0577668724, 0.0679311778, 0.0112088334, 0.0433620735, 0.0654479192, 0.0139870303, 0.0642498817, 0.0421306997, 0.0220420886, 0.0207014511, 0.0467448122, 0.0796478806, 0.0669218195, 0.0340356707, 0.0271227941, 0.0555090025, 0.0336129732, 0.0779457894, 0.1033323213, 0.0341301559, 0.0290200567, 0.0658444535, 0.0715279416, 0.0979181974, 0.0887139892, 0.0499492448, 0.0867339445, 0.0265461752, 0.0351348500, 0.0685902210, 0.0007006799, 0.0746933143, 0.0177173344, 0.0312595111, 0.1011352572, 0.0693712961, 0.0660032377, 0.0473113944, 0.0898398438, 0.0491651456, 0.0570484670, 0.0097849009, 0.0738585650, 0.0195094705, 0.1021169153, 0.0493687364, 0.0525106692, 0.0754658616, 0.0060012659, 0.0081504039, 0.0412193237, 0.0725182711, 0.0103198313, 0.0648188544, 0.0250894366, 0.0269387433, 0.0374738455, 0.0606376887, 0.0539103534, 0.0904159922, 0.0266370564, 0.0315715676, 0.0480955937, 0.0757321892, 0.0777732918, 0.0200314090, 0.0658709654, 0.0352417385, 0.0819332274, 0.0266713404, 0.0612112252, 0.0195752860, 0.0645135652, 0.0579654703, 0.0639889416, 0.0788894438, 0.0868534667, 0.0645122845, 0.0648452199, 0.0860078694, 0.0821184128, 0.0392946224, 0.0660208682, 0.0872076747, 0.0070766337, 0.0048763661, 0.0324107576, 0.0131376406, 0.0591529928, 0.0498387985, 0.0053959611, 0.0109229835, 0.0756385775, 0.0168469248, 0.0016525474, 0.0915616167, 0.0858370704, 0.0111414087, 0.0484759563, 0.0769582275, 0.0925119611, 0.0353087816, 0.0506499550, 0.0016803116, 0.0431893223, 0.0967043909, 0.0433911583, 0.0362257882, 0.0833796618, 0.0806196429, 0.0102885487, 0.0194362028, 0.0439319542, 0.0653745875, 0.0938628561, 0.0285524690, 0.0092618074, 0.0551138576, 0.0256478432, 0.0033887237, 0.0842178499, 0.0906926760, 0.0667296007, 0.0430409900, 0.0304024166, 0.0237633901, 0.0989086854, 0.0060099922, 0.1035655203, 0.0203139324, 0.0213686286, 0.0387560428, 0.0737927603, 0.0719753201, 0.0459654728, 0.0372363726, 0.0502014890, 0.0465466070, 0.0587606214, 0.0283612534, 0.0352863133, 0.0809113522, 0.0184686052, 0.0937062442, 0.0890862473, 0.0691729515, 0.0777705947, 0.0870217582, 0.0786982784, 0.0425006726, 0.0741559519, 0.0591223131, 0.0208711516, 0.0086442976, 0.0542961779, 0.0964502122, 0.0115223802, 0.0471693444, 0.0961680905, 0.0037086841, 0.0358062809, 0.0678419938, 0.0383598475, 0.0598173934, 0.0647737397, 0.0002329119, 0.0238418313, 0.0099821767, 0.0757198488, 0.0102485585, 0.0677910227, 0.0846883397, 0.0068595164, 0.0010754627, 0.0977868083, 0.0859900693, 0.0038140143, 0.0827092355, 0.0313717321, 0.0221567561, 0.0690170658, 0.0215415748, 0.0487316613, 0.0513219190, 0.0606434258, 0.0125796847, 0.0921954816, 0.0735321866, 0.0141209986, 0.0088954992, 0.0955788013, 0.0172646161, 0.0845517593, 0.0731042344, 0.0229561616, 0.0306567838, 0.0329528194, 0.0926394829, 0.0373327902, 0.0573469211, 0.0780410195, 0.0633459837, 0.0808304117, 0.0183307739, 0.0140420787};
 double MM[] = {0.7308471667, 0.5715531100, 0.4395311026, 0.0246516697, 0.9745202159, 0.5804405944, 0.5105282428, 0.3496521178, 0.1119226264, 0.0403556519, 0.0783540943, 0.9514584529, 0.7821899096, 0.9316827437, 0.2293603362, 0.6114790199, 0.1682359738, 0.3417156081, 0.1228469178, 0.2785523780, 0.2654963141, 0.8962108316, 0.0494178018, 0.4847089523, 0.8046882925, 0.0826726764, 0.9863193264, 0.7836800910, 0.9277150941, 0.1372170540, 0.0229541846, 0.7183694975, 0.8190327458, 0.2357269383, 0.1509811868, 0.3727799262, 0.1269967321, 0.9288003777, 0.4028631171, 0.1799353439, 0.9751117054, 0.0405981405, 0.2567610063, 0.3167306443, 0.2556971356, 0.5280607405, 0.0522974836, 0.1328581225, 0.0691369975, 0.6133963231, 0.2969266163, 0.5340890088, 0.3055768244, 0.0643385999, 0.1965178562, 0.3039416961, 0.3082874043, 0.5864047744, 0.7786532493, 0.8342092708, 0.1973282046, 0.2154489784, 0.7211801038, 0.3508369209, 0.3614392231, 0.9543758923, 0.5082452429, 0.1435691712, 0.2979115999, 0.0874063851, 0.6532657603, 0.3374967289, 0.9364869771, 0.0081943526, 0.9939250144, 0.8291197152, 0.5318438462, 0.5931355562, 0.9154212166, 0.4146022527, 0.5420536845, 0.4432881116, 0.7269554662, 0.3680389546, 0.8624031883, 0.1718096186, 0.6307085073, 0.7734037684, 0.9112811025, 0.7955898424, 0.0190808133, 0.1665629310, 0.0192343743, 0.7765370483, 0.6322608105, 0.7360248901, 0.2230459888, 0.1178219595, 0.9932571978, 0.5092464594, 0.5987435230, 0.8858958995, 0.2730016382, 0.0311956067, 0.3875662995, 0.6102015639, 0.6801720499, 0.5564201842, 0.5336849831, 0.4394367592, 0.2350445945, 0.7905077203, 0.7194882408, 0.5982366373, 0.5182560657, 0.2642314933, 0.9601174110, 0.3703089613, 0.4950839056, 0.1160488426, 0.1223849024, 0.4219043950, 0.7239684544, 0.4969121034, 0.3156994401, 0.2694273195, 0.9204361859, 0.7993459830, 0.5122751571, 0.8043552612, 0.1809797503, 0.3159803530, 0.3175035642, 0.7577493036, 0.8179475164, 0.7012312980, 0.4860781961, 0.1548366924, 0.2670870441, 0.1375308421, 0.7358336997, 0.7616142642, 0.5284688588, 0.6652113043, 0.2713063710, 0.1284018820, 0.8320328372, 0.6961830731, 0.4997517633, 0.4058425619, 0.6977314772, 0.5316701223, 0.0034806895, 0.9720961540, 0.6718180162, 0.8726345861, 0.1969596158, 0.5201541854, 0.8332536578, 0.6123673493, 0.1791798305, 0.0431679686, 0.2006083254, 0.2298473212, 0.9508415949, 0.8550669166, 0.5594467660, 0.6836042873, 0.4339978517, 0.1289845872, 0.1348488789, 0.1388947885, 0.9238827744, 0.7057449251, 0.5746876804, 0.0648077364, 0.1321346368, 0.8875029353, 0.0838868336, 0.2318464502, 0.7125822884, 0.6391552209, 0.4681593741, 0.9756617476, 0.5413017525, 0.3491573403, 0.2542196441, 0.9848641503, 0.9138945673, 0.1240251255, 0.2903791757, 0.9875735426, 0.1896671332, 0.5367995261, 0.3716731461, 0.5668190430, 0.7817055840, 0.8927367022, 0.1130941345, 0.5975245860, 0.2728615038, 0.5393418963, 0.4832934930, 0.1543062198, 0.9752356409, 0.1702061894};
 */
double XX[] = {0.501, 0.5};
double YY[] = {0.5, 0.5};
double RR[] = {0.4, 0.4};
double MM[] = {0.1, 1.0};

const int SCREEN_W = 800;
const int SCREEN_H = 600;
const int MAX_N = 600;
double csx[MAX_N];
double csy[MAX_N];
double cx[MAX_N];
double cy[MAX_N];
double cr[MAX_N];

class TCO13MM3App : public AppNative {
public:
    void prepareSettings( Settings *settings );
	void setup();
	void mouseDown( MouseEvent event );
	void update();
	void draw();
private:
    Font mFont;
    gl::TextureFontRef mTextureFont;
    
    CirclesSeparation *solution;
};

void TCO13MM3App::prepareSettings( Settings *settings )
{
    settings->enableHighDensityDisplay();
    settings->setWindowSize( SCREEN_W, SCREEN_H );
}

void TCO13MM3App::setup()
{
    // create font
    mFont = Font( "Arial", 22 );
    mTextureFont = gl::TextureFont::create( mFont );
    
    solution = new CirclesSeparation;
    solution->setup(vector<double>(XX, XX + sizeof(XX)/sizeof(double)),
                    vector<double>(YY, YY + sizeof(YY)/sizeof(double)),
                    vector<double>(RR, RR + sizeof(RR)/sizeof(double)),
                    vector<double>(MM, MM + sizeof(MM)/sizeof(double)));
}

void TCO13MM3App::mouseDown( MouseEvent event )
{
}

void TCO13MM3App::update()
{
    solution->update();
}

void TCO13MM3App::draw()
{
	// clear out the window with black
	gl::clear( Color( 1.0f, 1.0f, 1.0f ) );
    
    const vector<Circle>& circles = solution->current_circles();
    
    // calculate projection ratio
    double left = 1e10, right = -1e10, top = 1e10, bottom = -1e10;
    for (int i = 0; i < circles.size(); i++) {
        left = min(left, circles[i].x - circles[i].r);
        right = max(right, circles[i].x + circles[i].r);
        top = min(top, circles[i].y - circles[i].r);
        bottom = max(bottom, circles[i].y + circles[i].r);
    }
    double rate_w = SCREEN_W / (right - left);
    double rate_h = SCREEN_H / (bottom - top);
    double rate = min(rate_w, rate_h);
    
    // precompute position on the screen
    for (int i = 0; i < circles.size(); i++) {
        cx[i] = (circles[i].x - left) * rate;
        cy[i] = (circles[i].y - top) * rate;
        cr[i] = circles[i].r * rate;
        csx[i] = (circles[i].sx - left) * rate;
        csy[i] = (circles[i].sy - top) * rate;
    }
    
    // draw inner circle
    gl::enableAlphaBlending();
    for (int i = 0; i < circles.size(); i++) {
        gl::color( ColorA ( 0.0f, 0.0f, 1.0, circles[i].m ) );
        gl::drawSolidCircle(Vec2f(cx[i], cy[i]), cr[i]);
    }
    
    // draw circle edge
    gl::color( Color( 0.0f, 0.0f, 0.0f ) );
    for (int i = 0; i < circles.size(); i++)
        gl::drawStrokedCircle(Vec2f(cx[i], cy[i]), cr[i]);
    
    // draw lines
    for (int i = 0; i < circles.size(); i++) {
        gl::lineWidth(8.0 * circles[i].m);
        gl::color( ColorA( 1.0, 0.0, 0.0, circles[i].m ) );
        gl::drawLine(Vec2f(cx[i], cy[i]), Vec2f(csx[i], csy[i]));
    }
}

CINDER_APP_NATIVE( TCO13MM3App, RendererGl )
